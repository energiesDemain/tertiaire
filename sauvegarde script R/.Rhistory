FE_AME = data.table(read_excel("../parametrage modèle/Facteuremissions_thema.xls", sheet = "FEexportAME"))
FE_AME = data.table(read_excel("../parametrage modèle/Facteuremissions_thema.xls", sheet = "FEexportAME"))
library("data.table", lib.loc="C:/Program Files/R/R-3.4.4/library")
FE_AME = data.table(read_excel("../parametrage modèle/Facteuremissions_thema.xls", sheet = "FEexportAME"))
```{r, echo=F, message=FALSE, warning=F, cache=T, results=F, cache.rebuild = F}
source("analyse_param_utilisateurs.R",encoding = "ISO8859-1")
#### couleurs par type de système
colors_syst=
data.table(SYSTEME_CHAUD =factor(unique(COD_SYSTEME_CHAUD$SYSTEME_CHAUD),
levels = c("Chaudière gaz","Chaudière condensation gaz",
"Tube radiant", "Tube radiant performant" ,
"Chaudière fioul","Chaudière condensation fioul",
"Electrique direct","Electrique direct performant",
"Cassette rayonnante","Cassette rayonnante performant",
"PAC","PAC performant",
"Rooftop", "Rooftop performant",
"DRV", "DRV performant",
"Autre système centralisé",  "Autre système centralisé performant",
"nr","NA"))
)
colors_syst = colors_syst[order(SYSTEME_CHAUD)]
colors_syst[,color := c("dodgerblue1","dodgerblue4", "blue1","blue4","springgreen1","springgreen4",
"yellow1","yellow4","gold1","gold4","chocolate1","chocolate4","coral1","coral3",
"salmon1","salmon4","red1","red4","gray86","gray86")]
#### couleurs par énergie
color_energie = data.table(ENERGIE = factor(c("Gaz", "Fioul","Electricité","Urbain","Autres"), levels = c("Gaz", "Fioul","Electricité","Urbain","Autres")),
color = c("dodgerblue1","forestgreen","gold1", "orange1","red1"))
```
```{r, echo=F, message=FALSE, warning=F, cache=F, results=F, cache.rebuild =T,include = F}
#### liste des fichiers à lire
wbfiles  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_nopol_prixconstant"
wbfiles[2]  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_nopol_prixcroissants"
wbfiles[3]  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_AME_nouveauxprix"
wbfiles[4]  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_AMS2_sansdecarb"
wbfiles[5]  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_AMS1_biog150"
wbfiles[6]  = "../Sauvegardes_resultats_thema/avec_calib_CODAH/avec_calib_CODAH/2050_AMS2"
###### noms des scenarios ########
#wbname = c( paste0("S",1:length(wbfiles)))
wbname = c("S0 P0",
"S0b REF",
"S1 AME",
#           "S7 AMS1 Dec0",
"S4 AMSDec0",
#           "S2 AMS",
"S2 AMS1",
"S3 AMS2"
#           "S4 AMS1 GJ",
#           "S6 AMS2 GJ",
)
### choix du scenario de référence pour le bilan socio_eco
#scenario_ref =c("S0b REF")
scenario_ref =c("S1 AME")
### scenarios pour graph type consultant des conso unitaires
graph_evol_conso_u = T
scenario_P0 = "S0 P0"
scenario_order = c("S0 P0","S0b REF","S1 AME","S4 AMSDec0")
### scenario pour le graph conso unitaire
scenario_consoubranche = c("S1 AME","S4 AMSDec0")
#### choix écriture des excels ou non
write_excel =F
##### choix des parties à afficher
check_calib =F
check_parc =F
check_conso =T
check_PM= T
check_perf= T
check_INV = T
check_Em = T
check_bilan_socio=T
### choix des scénarii à exporter en excel
scenario_toexport_list = c(
"S0 P0",
"S0b REF",
"S1 AME",
"S2 AMS",
"S2 AMS1",
"S4 AMS1 GJ",
"S3 AMS2",
"S6 AMS2 GJ",
"S7 AMS1 Dec0",
"S4 AMSDec0"
)
### chemin où on exporte les résultats
wbdir_scenario_toexport = c("../publication_thema/run_AMS/")
### scenarios à comparer à la cible de l'AMS de la DGEC
scenario_comp_AMS = c("S0 P0",
"S0b REF",
"S1 AME",
"S2 AMS",
"S2 AMS1",
"S4 AMS1 GJ",
"S3 AMS2",
"S6 AMS2 GJ",
"S7 AMS1 Dec0",
"S4 AMSDec0")
# scenario noms plus courts pour les graphs
scenarioshortnames = wbname
scenariolabels = c("S0 P0" = "P0",
"S0b REF" = "REF",
"S1 AME" = "AME",
"S2 AMS" = "AMS",
"S2 AMS1"="AMS1",
"S4 AMS1 GJ" ="AMS1 GJ",
"S3 AMS2" = "AMS2",
"S6 AMS2 GJ"= "AMS2 GJ",
"S7 AMS1 Dec0"="AMS1 Dec0",
"S4 AMSDec0" = "AMSDec0")
#### facteurs d'émissions à utiliser par scénario
FE_to_use=data.table(scenario=wbname,FE=c("FE_AME",
"FE_AME",
"FE_AME",
"FE_AME",
"FE_AMS",
"FE_AMS"
#"FE_AMSGJ","FE_AMSGJ"
))
#### composante énergie à utiliser par scénario
CC_to_use = data.table(scenario=wbname,CC=c("CC_AMSGJ","CC_AMSGJ","CC_AME", "CC_AMS","CC_AMS","CC_AMS"
#"CC_AMSGJ","CC_AMS","CC_AMSGJ","CC_AMS","CC_AMS"
))
CC_toutes_ener = data.table(scenario=wbname,CC=c(F,F,F,F,F,F
))
#### prix et taxes à utiliser
prix_usager_to_use = data.table(scenario=wbname,prix=c(
"prix_usager_2018",
"prix_usager_Nopol","prix_usager_AME",
# "prix_usager_AMS",p
"prix_usager_AMS2nodecarb",
"prix_usager_AMS1","prix_usager_AMS2"
#"prix_usager_AMS1GJ","prix_usager_AMS2GJ"
))
tax_to_use = data.table(scenario=wbname,taxe=c(
"taxes_usager_2018",
"taxes_usager_Nopol",
"taxes_usager_AME",
# "taxes_usager_AMS",
"taxes_usager_AMS2nodecarb",
"taxes_usager_AMS1",
"taxes_usager_AMS2"
#"taxes_usager_AMS1GJ","taxes_usager_AMS2GJ"
))
#### facteurs d'émissions constants par énergie et usage pour le scénrio de référence et l'AME
FE_AME = data.table(read_excel("../parametrage modèle/Facteuremissions_thema.xls", sheet = "FEexportAME"))
require(knitr)
require(data.table)
require(ggplot2)
require(Hmisc)
require(reshape2)
require(plyr)
require(readxl)
#require(ggthemes)
require(texreg)
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
options(java.parameters = "-Xmx8192m")
require(XLConnect)
require(RColorBrewer)
# set pander table-layout options
library(pander)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('table.split.table', Inf)
panderOptions('big.mark', ",")
panderOptions('keep.trailing.zeros', TRUE)
colorpalette = "Spectral"
fillpalette = "Spectral"
scenario_palette = "Spectral"
```
FE_AME = data.table(read_excel("../parametrage modèle/Facteuremissions_thema.xls", sheet = "FEexportAME"))
FE_AME = melt(FE_AME, id.vars = c("energie","usage"),variable.name = "annee",value.name = "FE_AME")
FE_AME[,annee:=as.character(annee)]
DecarbAMS = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean.xls", sheet = "DecarbAMS"))
DecarbAMS = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean.xls", sheet = "DecarbAMS"))
DecarbAMSGJ = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_giletsjaunes.xls", sheet = "DecarbAMS"))
DecarbAMSnodecarb = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_sansdecarb.xls", sheet = "DecarbAMS"))
DecarbAMS = melt(DecarbAMS, id.vars = c("annee"),variable.name = "energie",value.name = "Decarb_AMS")
DecarbAMS[,annee:=as.character(annee)]
DecarbAMSGJ = melt(DecarbAMSGJ, id.vars = c("annee"),variable.name = "energie",value.name = "Decarb_AMSGJ")
DecarbAMSGJ[,annee:=as.character(annee)]
DecarbAMSnodecarb = melt(DecarbAMSnodecarb, id.vars = c("annee"),variable.name = "energie",value.name = "Decarb_AMSnodecarb")
DecarbAMSnodecarb[,annee:=as.character(annee)]
FE = merge(FE_AME, DecarbAMS, by=c("annee","energie") )
FE = merge(FE, DecarbAMSGJ, by=c("annee","energie") )
FE = merge(FE, DecarbAMSnodecarb, by=c("annee","energie") )
FE = merge(FE_AME, DecarbAMS, by=c("annee","energie") )
FE = merge(FE, DecarbAMSGJ, by=c("annee","energie") )
FE = merge(FE, DecarbAMSnodecarb, by=c("annee","energie") )
Decarb_ini_2014 = DecarbAMS[annee=="2014",]
FE = merge(FE, Decarb_ini_2014[, list(energie, Decarb_ini_2014=Decarb_AMS)], by=c("energie") )
FE[,FE_AMS := FE_AME*(1-Decarb_AMS)/(1-Decarb_ini_2014)]
FE[,FE_AMSGJ := FE_AME*(1-Decarb_AMSGJ)/(1-Decarb_ini_2014)]
#### prix des énergies pour l'usager par scénario euros par kwh
prix_usager_2018 = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_prix_constant_2018.xls", sheet = "prix_usager_AME"))
prix_usager_Nopol = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_Nopol.xls", sheet = "prix_usager_AME"))
prix_usager_AME = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean.xls", sheet = "prix_usager_AME"))
prix_usager_AMS = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema.xls", sheet = "prix_usager_AMS"))
prix_usager_AMS1 = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean.xls", sheet = "prix_usager_AMS1"))
prix_usager_AMS2 = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean.xls", sheet = "prix_usager_AMS2"))
prix_usager_AMS1GJ = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_giletsjaunes.xls", sheet = "prix_usager_AMS1"))
prix_usager_AMS2GJ = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_giletsjaunes.xls", sheet = "prix_usager_AMS2"))
prix_usager_AMS1nodecarb = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_sansdecarb.xls", sheet = "prix_usager_AMS1"))
prix_usager_AMS2nodecarb = data.table(read_excel("../publication_thema/hypothèses_prix/Prix_scenario_thema_clean_sansdecarb.xls", sheet = "prix_usager_AMS2"))
#### donne un nom à chaque scénario de prix
prix_usager_2018= melt(prix_usager_2018, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_2018")
prix_usager_Nopol= melt(prix_usager_Nopol, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_Nopol")
prix_usager_AME= melt(prix_usager_AME, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AME")
prix_usager_AMS= melt(prix_usager_AMS, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS")
prix_usager_AMS1= melt(prix_usager_AMS1, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS1")
prix_usager_AMS2= melt(prix_usager_AMS2, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS2")
prix_usager_AMS1GJ= melt(prix_usager_AMS1GJ, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS1GJ")
prix_usager_AMS2GJ= melt(prix_usager_AMS2GJ, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS2GJ")
prix_usager_AMS1nodecarb= melt(prix_usager_AMS1nodecarb, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS1nodecarb")
prix_usager_AMS2nodecarb= melt(prix_usager_AMS2nodecarb, id.vars = c("annee"),variable.name = "energie",value.name = "prix_usager_AMS2nodecarb")
prix_usager = merge(prix_usager_2018,prix_usager_AME,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_Nopol,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS1,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS2,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS1GJ,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS2GJ,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS1nodecarb,by=c("annee","energie"))
prix_usager = merge(prix_usager,prix_usager_AMS2nodecarb,by=c("annee","energie"))
#correction ancien prix AMS en euros par MWh
prix_usager[,prix_usager_AMS:=prix_usager_AMS/1000]
prix_usager
source("analyse_param_utilisateurs.R",encoding = "ISO8859-1")
